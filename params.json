{"name":"Exiftool","tagline":"Ruby exiftool wrapper that is simple, correct, and supports multiget","body":"# Ruby wrapper for ExifTool\r\n\r\n[![Build Status](https://secure.travis-ci.org/mceachen/exiftool.png?branch=master)](http://travis-ci.org/mceachen/exiftool)\r\n[![Gem Version](https://badge.fury.io/rb/exiftool.png)](http://rubygems.org/gems/exiftool)\r\n[![Code Climate](https://codeclimate.com/github/mceachen/exiftool.png)](https://codeclimate.com/github/mceachen/exiftool)\r\n\r\nThis gem is the simplest thing that could possibly work that\r\nreads the output of [exiftool](http://www.sno.phy.queensu.ca/~phil/exiftool)\r\nand renders it into a ruby hash, with *correctly typed values* and symbolized keys.\r\n\r\nRubies 2.x and later are supported.\r\n\r\nThe latest Exiftool is recommended, but you'll get that automatically by using the\r\n[exiftool_vendored](https://github.com/mceachen/exiftool_vendored) gem!\r\n\r\n## Features\r\n\r\n* Multiget support\r\n* GPS latitude and longitude values are parsed as signed floats,\r\n  where north and east are positive, and west and south are negative.\r\n* Values like shutter speed and exposure time are rendered as Rationals,\r\n  which lets the caller show them as fractions (1/250) or as comparable numeric instances.\r\n* String values like \"interop\" and \"serial number\" are kept as strings\r\n  (which preserves zero prefixes)\r\n* Timestamps are attempted to be interpreted with correct timezones and sub-second resolution, if\r\n  the header contains that data.\r\n  If the timestamp doesn't include a timezone offset, we leave it as a string, rather than inferring\r\n  the current system timezone which might not be applicable to the image. We add a decimal yyyymmdd\r\n  key for these problematic fields.\r\n* No ```method_missing``` madness\r\n* Excellent test coverage\r\n* Clean, readable code\r\n* MIT license\r\n\r\n## Usage\r\n\r\n```ruby\r\nrequire 'exiftool'\r\ne = Exiftool.new(\"path/to/iPhone 4S.jpg\")\r\ne.to_hash\r\n# => {:make => \"Apple\", :gps_longitude => -122.47566667, …\r\ne.to_display_hash\r\n# => {\"Make\" => \"Apple\", \"GPS Longitude\" => -122.47566667, …\r\n```\r\n\r\n### Multiget support\r\n\r\nThis gem supports Exiftool's multiget, which lets you fetch metadata for many files at once.\r\n\r\nThis can be dramatically more efficient than spinning up the ```exiftool```\r\nprocess for each file due to the cost of spinning up perl.\r\n\r\nSupply an array to the Exiftool initializer, then use ```.result_for```:\r\n\r\n```ruby\r\nrequire 'exiftool'\r\ne = Exiftool.new(Dir[\"**/*.jpg\"])\r\nresult = e.result_for(\"path/to/iPhone 4S.jpg\")\r\nresult.to_hash\r\n# => {:make => \"Apple\", :gps_longitude => -122.47566667, …\r\nresult[:gps_longitude]\r\n# => -122.47566667\r\n```\r\n\r\nOr iterate through files_with_results:\r\n\r\n```ruby\r\ne.files_with_results\r\n# => [\"path/to/iPhone 4S.jpg\", \"path/to/Droid X.jpg\", …\r\n```\r\n\r\n### Dates without timezones\r\n\r\nIt seems that most exif dates don't include timezone offsets, without which forces us to assume the\r\ncurrent timezone is applicable to the image, which isn't necessarily correct.\r\n\r\nTo be correct, we punt and return the exiftool-formatted string, which will be something like\r\n```%Y:%m:%d %H:%M:%S```.\r\n\r\nIf the clock was set correctly on your camera, the date will be the correct calendar day\r\nas far as you were concerned when you took the photo. Given that, we\r\nadd a ```_civil``` key associated to just the calendar date of the field, which should be safe-ish.\r\n\r\n```ruby\r\nrequire 'exiftool'\r\ne = Exiftool.new(\"test/IMG_2452.jpg\")\r\ne[:date_time_original]\r\n=> \"2011:07:06 09:46:45\"\r\ne[:date_time_original_civil]\r\n=> #<Date: 2011-07-06 ((2455749j,0s,0n),+0s,2299161j)>\r\n```\r\n\r\n### When things go wrong\r\n\r\n* ```Exiftool::NoSuchFile``` is raised if the provided filename doesn't exist.\r\n* ```Exiftool::ExiftoolNotInstalled``` is raised if ```exiftool``` isn't in your ```PATH```.\r\n* If ExifTool has a problem reading EXIF data, no exception is raised, but ```#errors?``` will return true:\r\n\r\n```ruby\r\nExiftool.new(\"Gemfile\").errors?\r\n#=> true\r\n```\r\n\r\n## Installation\r\n\r\n### Step 1: Install ExifTool\r\n\r\nThe easiest way is to use the \"vendored\" exiftool in the\r\n[exiftool_vendored](https://github.com/mceachen/exiftool_vendored) gem. Just add\r\n\r\n    gem 'exiftool_vendored'\r\n\r\nto your Gemfile, run ```bundle```, and you're done. (Note that it depends on the ```exiftool``` gem,\r\nso really, you're done! Skip step 2!)\r\n\r\nIf you want to install exiftool on your system yourself:\r\n\r\n* MacOS with [homebrew](http://mxcl.github.io/homebrew/)? ```brew install exiftool```\r\n* Debian or Ubuntu? ```sudo apt-get install libimage-exiftool-perl```\r\n* Something else? [RTFM](http://www.sno.phy.queensu.ca/~phil/exiftool/install.html)!\r\n\r\n### Step 2: Add the gem\r\n\r\nIf you didn't use ```exiftool_vendored```, then add this your Gemfile:\r\n\r\n    gem 'exiftool'\r\n\r\nand then run ```bundle```.\r\n\r\nIf you have exiftool installed outside of ruby's ```PATH```, add an initializer that points the gem\r\nto the tool, like this: ```Exiftool.command = '/home/ruby/Image-ExifTool-9.33/exiftool'```. You don't need to do\r\nthis if you've installed added the exiftool directory to the PATH of the shell that runs ruby.\r\n\r\n## Change history\r\n\r\n### 0.7.0\r\n\r\n* Added zero-date parsing to address [issue #2](https://github.com/mceachen/exiftool/issues/2).\r\n  Thanks for the pull request, [Sergey Morozov](https://github.com/morozgrafix)!\r\n* Updated Travis configuration (RIP 1.9.x).\r\n\r\n### 0.5.0\r\n\r\n* Introduced YMD parsing for all date columns, even if they don't specify timezone offsets.\r\n\r\n### 0.4.0\r\n\r\n* Added ```#raw_hash``` to ```Exiftool::Result``` to support columns that can have parsing issues,\r\n  like dates that don't include timezone offsets.\r\n\r\n### 0.3.1\r\n\r\n* ```.exiftool_version``` is now a string rather than a float,\r\n  which didn't work so well with version numbers like \"9.40\"\r\n\r\n### 0.3.0\r\n\r\n* Support for explicitly setting the path to exiftool with ```Exiftool.command```\r\n* Removed the test directory from the gem contents, as it included the test images and made the gem\r\n  ginormous.\r\n\r\n### 0.2.0\r\n\r\n* Renamed from exiftoolr to exiftool\r\n\r\n### 0.1.0\r\n\r\n* Better timestamp parsing—now both sub-second and timezone offsets are handled correctly\r\n* Switched to minitest-spec\r\n* Ruby 1.8.7 is no longer supported, hence the minor version uptick.\r\n\r\n### 0.0.9\r\n\r\n* Explicitly added MIT licensing to the gemspec.\r\n\r\n### 0.0.8\r\n\r\n* Extracted methods in parsing to make the code complexity lower. FOUR DOT OH GPA\r\n\r\n### 0.0.7\r\n\r\n* Added warning values for EXIF headers that are corrupt\r\n* Made initialize gracefully accept an empty array, or an array of Pathname instances\r\n* Added support for ruby 1.9.3 and exiftool v8.15 (Ubuntu Natty) and v8.85 (current stable version)\r\n\r\n### 0.0.5\r\n\r\nFixed homepage URL in gemspec\r\n\r\n### 0.0.4\r\n\r\nAdded support for multiple file fetching (which is *much* faster for large directories)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}